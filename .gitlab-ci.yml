before_script:
  # Avoid picking up PIV endpoint in CAC cards
  - sed -e "/PIV-II/d" -i src/libopensc/ctx.c
  # enable debug messages in the testsuite
  - sed -e "s/^p11test_CFLAGS/#p11test_CFLAGS/g" -i src/tests/p11test/Makefile.am
  - ./bootstrap
  - ./configure
  - make -j4
  - make check
  - cd src/tests/p11test/
variables:
  CAC_SLOT_ID: 8
  COOLKEY_SLOT_ID: 4

.job_base: &base_job
  artifacts:
    expire_in: '1 week'
    when: on_failure
    paths:
      - src/tests/p11test/*.log

.job_template: &functional_test
  <<: *base_job
  artifacts:
    expire_in: '1 week'
    when: always
    paths:
      - src/tests/p11test/*.log
      - src/tests/p11test/*.json
      - tests/test-suite.log
  cache:
    paths:
      - src/tests/p11test/*.json


################################
##     Common Access Card     ##
################################
Build and Test CAC:
  <<: *functional_test
  only:
    - cac
  script:
    - ./p11test -s $CAC_SLOT_ID -p 77777777 -o cac.json | tee cac.log
    - if [[ -f cac_old.json ]]; then diff -u3 cac_old.json cac.json; fi
    - cp cac.json cac_old.json
    # cache the results for the next run
  tags:
    - cac
    - linux

Build and Test CAC with valgrind:
  <<: *base_job
  only:
    - cac
  script:
    # remove the dlcose() calls to have reasonable traces
    - sed '/if(pkcs11_so)/I {N;d;}' -i p11test_loader.c
    - make
    - valgrind --leak-check=full --trace-children=yes --suppressions=p11test.supp ./p11test -s $CAC_SLOT_ID -p 77777777 2>&1| tee cac.log
    - grep "definitely lost:.*0 bytes in 0 blocks" cac.log
  tags:
    - cac
    - linux
    - valgrind


################################
##       Coolkey applet       ##
################################
Build and Test Coolkey:
  <<: *functional_test
  only:
    - coolkey
  script:
    - ./p11test -s $COOLKEY_SLOT_ID -p redhat -o coolkey.json | tee coolkey.log
    - if [[ -f coolkey_old.json ]]; then diff -u3 coolkey_old.json coolkey.json; fi
    - cp coolkey.json coolkey_old.json
    # cache the results for the next run
  tags:
    - coolkey
    - linux

Build and Test Coolkey with valgrind:
  <<: *base_job
  only:
    - coolkey
  script:
    # remove the dlcose() calls to have reasonable traces
    - sed '/if(pkcs11_so)/I {N;d;}' -i p11test_loader.c
    - make
    - valgrind --leak-check=full --trace-children=yes --suppressions=p11test.supp ./p11test -s $COOLKEY_SLOT_ID -p redhat 2>&1 | tee coolkey.log
    - grep "definitely lost:.*0 bytes in 0 blocks" coolkey.log
  tags:
    - coolkey
    - linux
    - valgrind

# Build and Test with asan:
#   <<: *base_job
#   script:
#     - ./bootstrap &&
#       CFLAGS="-fsanitize=address -g -O2" LDFLAGS="-static-libasan" ./configure &&
#       make -j4
#     - cd src/tests/p11test/ &&
#       make
#     - ASAN_OPTIONS=symbolize=1 ASAN_SYMBOLIZER_PATH=/usr/bin/llvm-symbolizer ./p11test -p 77777777 | tee asan.log
#   tags:
#   - asan
#   - linux
#   except:
#   - tags
